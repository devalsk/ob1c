
// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   Структура - Подробнее см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке().
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Информация = НСтр("ru = 'Обработка заполнения документа ""ПеремещениеОС""'");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиЗаполнениеОбъекта();
	ПараметрыРегистрации.Версия = "2.4.1.1";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение.Добавить("Документ.ПеремещениеОС");
	
	// См. реализацию команды в процедуре ВыполнитьКоманду модуля обработки.
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Зап Перемещения По МОЛ'");
	Команда.Идентификатор = "ЗаполПеремещенияПоМОЛСКоП";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыЗаполнениеФормы();
	Команда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Обработчик серверных команд.
//
// Параметры:
//   ИдентификаторКоманды - Строка - Имя команды, определенное в функции СведенияОВнешнейОбработке().
//   ОбъектыНазначения    - Массив - Ссылки объектов, для которых вызвана команда.
//       - Неопределено - для команд "ЗаполнениеФормы".
//   ПараметрыВыполнения  - Структура - Контекст выполнения команды.
//       * ДополнительнаяОбработкаСсылка - СправочникСсылка.ДополнительныеОтчетыИОбработки - Ссылка обработки.
//           Может использоваться для чтения параметров обработки.
//           Пример см. в комментарии к функции ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы().
//
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначения, ПараметрыВыполнения) Экспорт
		
	ОбъектФормы = ПараметрыВыполнения.ЭтаФорма.Объект;
	
	ТЧОС = ОбъектФормы.ОС;           
	ОбъектФормы.ОС.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО (МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство)
	|ГДЕ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ = &МОЛ
    |И МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение = &Местонахождение";
	
	Запрос.УстановитьПараметр("Дата",ОбъектФормы.Дата);
	Запрос.УстановитьПараметр("МОЛ",ОбъектФормы.МОЛОрганизации);
	Запрос.УстановитьПараметр("Местонахождение",ОбъектФормы.ПодразделениеОрганизации);

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ТЧОС.Добавить();
		СтрокаТЧ.ОсновноеСредство = Выборка.ОсновноеСредство;
		СтрокаТЧ.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
	КонецЦикла;
	
		
КонецПроцедуры



//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
////

//// Сервисная экспортная функция. Вызывается в основной программе при регистрации обработки в информационной базе
//// Возвращает структуру с параметрами регистрации
////
//// Возвращаемое значение:
////		Структура с полями:
////			Вид - строка, вид обработки, один из возможных: "ДополнительнаяОбработка", "ДополнительныйОтчет", 
////					"ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов"
////			Назначение - Массив строк имен объектов метаданных в формате: 
////					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
////					Например, "Документ.СчетЗаказ" или "Справочник.*". Параметр имеет смысл только для назначаемых обработок, для глобальных может не задаваться.
////			Наименование - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
////			Информация  - строка - Краткая информация или описание по обработке.
////			Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
////			БезопасныйРежим - булево - Принимает значение Истина или Ложь, в зависимости от того, требуется ли устанавливать или отключать безопасный режим 
////							исполнения обработок. Если истина, обработка будет запущена в безопасном режиме. 
////
////
//Функция СведенияОВнешнейОбработке() Экспорт
//	
//	//Инициализируем структуру с параметрами регистрации
//	
//	//Определяем список объектов, вызывающих обработку
//	ОбъектыНазначенияФормы = Новый Массив;
//	ОбъектыНазначенияФормы.Добавить("Документ.ИнвентаризацияТоваровНаСкладе");
//	
//	ПараметрыРегистрации = ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы);
//	ПараметрыРегистрации.Версия = "2.0";

//	//Определяем команды для печати формы
//	
//	ТаблицаКоманд = ПолучитьТаблицуКоманд();

//	ДобавитьКоманду(
//			ТаблицаКоманд,
//			ЭтотОбъект.Метаданные().Синоним, // Представление команды в пользовательском интерфейсе
//			ЭтотОбъект.Метаданные().Синоним,   // Уникальный идентификатор команды
//			);

//	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

//	Возврат ПараметрыРегистрации;

//КонецФункции

////
//// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
////

//// Формирует структуру с параметрами регистрации регистрации обработки в информационной базе
////
//// Параметры:
////	ОбъектыНазначенияФормы - Массив - Массив строк имен объектов метаданных в формате: 
////					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
////					или строка с именем объекта метаданных 
////	НаименованиеОбработки - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
////							Необязательно, по умолчанию синоним или представление объекта
////	Информация  - строка - Краткая информация или описание обработки.
////							Необязательно, по умолчанию комментарий объекта
////	Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
////
////
//// Возвращаемое значение:
////		Структура
////
//Функция ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы = Неопределено, НаименованиеОбработки = "", Информация = "", Версия = "1.0")

//	Если ТипЗнч(ОбъектыНазначенияФормы) = Тип("Строка") Тогда
//		ОбъектНазначенияФормы = ОбъектыНазначенияФормы;
//		ОбъектыНазначенияФормы = Новый Массив;
//		ОбъектыНазначенияФормы.Добавить(ОбъектНазначенияФормы);
//	КонецЕсли; 
//	
//	ПараметрыРегистрации = Новый Структура;
//	ПараметрыРегистрации.Вставить("Вид", "ЗаполнениеОбъекта");
//	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
//	ПараметрыРегистрации.Вставить("Назначение", ОбъектыНазначенияФормы);
//	
//	Если Не ЗначениеЗаполнено(НаименованиеОбработки) Тогда
//		НаименованиеОбработки = ЭтотОбъект.Метаданные().Представление();
//	КонецЕсли; 
//	ПараметрыРегистрации.Вставить("Наименование", НаименованиеОбработки);
//	
//	Если Не ЗначениеЗаполнено(Информация) Тогда
//		Информация = ЭтотОбъект.Метаданные().Комментарий;
//	КонецЕсли; 
//	ПараметрыРегистрации.Вставить("Информация", Информация);
//	
//	ПараметрыРегистрации.Вставить("Версия", Версия);

//	Возврат ПараметрыРегистрации;

//КонецФункции

//// Формирует таблицу значений с командами печати
////	
//// Возвращаемое значение:
////		ТаблицаЗначений
////
//Функция ПолучитьТаблицуКоманд()

//	Команды = Новый ТаблицаЗначений;
//	
//	//Представление команды в пользовательском интерфейсе
//	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
//	
//	//Уникальный идентификатор команды или имя макета печати
//	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
//	
//	//Способ вызова команды: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"
//	// "ОткрытиеФормы" - применяется только для отчетов и дополнительных отчетов
//	// "ВызовКлиентскогоМетода" - вызов процедуры Печать(), определённой в модуле формы обработки
//	// "ВызовСерверногоМетода" - вызов процедуры Печать(), определённой в модуле объекта обработки
//	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
//	
//	//Показывать оповещение.
//	//Если Истина, требуется показать оповещение при начале и при завершении работы обработки. 
//	//Имеет смысл только при запуске обработки без открытия формы
//	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
//	
//	//Дополнительный модификатор команды. 
//	//Используется для дополнительных обработок печатных форм на основе табличных макетов.
//	//Для таких команд должен содержать строку ПечатьMXL
//	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

//	Возврат Команды;

//КонецФункции

//// Вспомогательная процедура.
////
//Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовКлиентскогоМетода", ПоказыватьОповещение = Истина, Модификатор = "ПечатьMXL")

//	НоваяКоманда = ТаблицаКоманд.Добавить();
//	НоваяКоманда.Представление = Представление;
//	НоваяКоманда.Идентификатор = Идентификатор;
//	НоваяКоманда.Использование = Использование;
//	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
//	//НоваяКоманда.Модификатор = Модификатор;

//КонецПроцедуры

///////
////Функция СведенияОВнешнейОбработке() Экспорт
////	
////	Назначения = Новый Массив;
////	Назначения.Добавить("Документ.ИнвентаризацияТоваровНаСкладе");
////	
////	ПараметрыРегистрации = Новый Структура;
////	ПараметрыРегистрации.Вставить("Вид", "ЗаполнениеОбъекта");
////	ПараметрыРегистрации.Вставить("Назначение", Назначения);
////	ПараметрыРегистрации.Вставить("Наименование", ЭтотОбъект.Метаданные().Синоним);
////	ПараметрыРегистрации.Вставить("Версия","1.0");
////	ПараметрыРегистрации.Вставить("Информация", "Дополнительная обработка табличной части");
////	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
////	
////	Команды = ПолучитьТаблицуКоманд();
////	ДобавитьКоманду(Команды, ЭтотОбъект.Метаданные().Синоним, ЭтотОбъект.Метаданные().Имя, "ВызовКлиентскогоМетода", Ложь,);
////	
////	ПараметрыРегистрации.Вставить("Команды",Команды);
////	
////	Возврат ПараметрыРегистрации;
////	
////КонецФункции

////Функция ПолучитьТаблицуКоманд()
////	
////	Команды = Новый ТаблицаЗначений;
////	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
////	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
////	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
////	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
////	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
////	
////	Возврат Команды ;
////	
////КонецФункции	

////Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
////	
////	НоваяКоманда = ТаблицаКоманд.Добавить();
////	НоваяКоманда.Представление = Представление;
////	НоваяКоманда.Идентификатор = Идентификатор;
////	НоваяКоманда.Использование = Использование;
////	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
////	НоваяКоманда.Модификатор = Модификатор;
////	
////КонецПроцедуры	
